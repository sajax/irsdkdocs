import{_ as l,C as o,c as i,o as n,j as t,ag as s,a,G as h}from"./chunks/framework.CDHI-oCm.js";const _=JSON.parse('{"title":"Throttle","description":"","frontmatter":{},"headers":[],"relativePath":"telemetry/throttle.md","filePath":"telemetry/throttle.md"}'),d={name:"telemetry/throttle.md"},p={id:"throttle",tabindex:"-1"};function m(c,e,f,u,g,b){const r=o("Badge");return n(),i("div",null,[t("h1",p,[e[0]||(e[0]=a("Throttle ")),h(r,{text:"float"}),e[1]||(e[1]=a()),e[2]||(e[2]=t("a",{class:"header-anchor",href:"#throttle","aria-label":'Permalink to "Throttle <Badge text="float" />"'},"​",-1))]),e[3]||(e[3]=s('<p>Throttle is a float value determined by the percentage of throttle application being applied in-sim after any throttle shaping or automatic lifts/cuts are taken into consideration, with 0 being a closed throttle and 1 being fully open.</p><p>For the pedal position please see <a href="./throttleraw.html">ThrottleRaw</a></p><div class="tip custom-block"><p class="custom-block-title">Developer Post</p><p>ThrottleRaw, BrakeRaw - These show your raw throttle brake inputs before any throttle shaping, brake force curve, or any lift/cuts from the transmission. So you can think of Throttle being a sensor on the throttle body and throttle raw being a sensor on the pedal. This is handy for the Williams since there are so many lifts and cuts you never can tell what is going on.</p><p><a href="http://members.iracing.com/jforum/posts/list/1000/1470675.page#7487892" target="_blank" rel="noreferrer">Source</a></p></div><h3 id="related" tabindex="-1">Related <a class="header-anchor" href="#related" aria-label="Permalink to &quot;Related&quot;">​</a></h3><ul><li><a href="./throttleraw.html">ThrottleRaw</a></li><li><a href="./brake.html">Brake</a></li><li><a href="./brakeraw.html">BrakeRaw</a></li><li><a href="./clutch.html">Clutch</a></li><li><a href="./handbrake.html">HandBrake</a></li><li><a href="./handbrakeraw.html">HandBrakeRaw</a></li><li><a href="./steeringwheelangle.html">SteeringWheelAngle</a></li><li><a href="./gear.html">Gear</a></li></ul>',5))])}const T=l(d,[["render",m]]);export{_ as __pageData,T as default};
