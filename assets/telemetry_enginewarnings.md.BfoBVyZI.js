import{_ as n,C as d,c as i,o as s,j as e,ag as o,a as r,G as l}from"./chunks/framework.CDHI-oCm.js";const f=JSON.parse('{"title":"EngineWarnings","description":"","frontmatter":{},"headers":[],"relativePath":"telemetry/enginewarnings.md","filePath":"telemetry/enginewarnings.md"}'),g={name:"telemetry/enginewarnings.md"},p={id:"enginewarnings",tabindex:"-1"};function m(c,t,h,u,_,b){const a=d("Badge");return s(),i("div",null,[e("h1",p,[t[0]||(t[0]=r("EngineWarnings ")),l(a,{text:"bitfield"}),t[1]||(t[1]=r()),t[2]||(t[2]=e("a",{class:"header-anchor",href:"#enginewarnings","aria-label":'Permalink to "EngineWarnings <Badge text="bitfield" />"'},"â€‹",-1))]),t[3]||(t[3]=o('<table tabindex="0"><thead><tr><th>Name</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>irsdk_waterTempWarning</td><td>0x0001</td><td></td></tr><tr><td>irsdk_fuelPressureWarning</td><td>0x0002</td><td></td></tr><tr><td>irsdk_oilPressureWarning</td><td>0x0004</td><td></td></tr><tr><td>irsdk_engineStalled</td><td>0x0008</td><td></td></tr><tr><td>irsdk_pitSpeedLimiter</td><td>0x0010</td><td></td></tr><tr><td>irsdk_revLimiterActive</td><td>0x0010</td><td></td></tr><tr><td>irsdk_oilTempWarning</td><td>0x0010</td><td></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">Developer Post</p><p>The irsdk_waterTempWarning is probably not something you want to use, I have it set to &gt;110 C, but each car sets its own threshold somewhere between 110 C and 130 C. It is good enough if you don&#39;t want to be accurate.</p><p>I&#39;m going to go ahead and add in a irsdk_oilTempWarning = 0x040 value, that will trigger at 125 C, with all current cars triggering somewhere between 125 C and 140 C.</p><p>There is not currently a clean way for me to pull the actual lamp bit, or the temperature limit. But I will put this on the back burner and try to think up a better way to get the data.</p><p><a href="https://members.iracing.com/jforum/posts/list/3675/1470675.page#12383105" target="_blank" rel="noreferrer">Source</a></p></div>',2))])}const k=n(g,[["render",m]]);export{f as __pageData,k as default};
